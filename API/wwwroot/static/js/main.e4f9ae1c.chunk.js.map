{"version":3,"sources":["app/api/agent.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/ticketStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/contactStore.ts","app/stores/commentStore.ts","features/tickets/dashboard/TicketComments.tsx","features/tickets/dashboard/TicketItem.tsx","features/tickets/dashboard/TicketDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","app/layout/NavBar.tsx","features/home/Portfolio.tsx","app/common/form/MyTextArea.tsx","features/home/QuoteForm.tsx","features/home/SlideShow.tsx","features/assets/website.jpg","features/assets/client.jpg","features/home/HomePage.tsx","app/layout/Footer.tsx","features/payments/TransactionItem.tsx","features/payments/TransactionHistory.tsx","features/users/ProgressFeed.tsx","features/tickets/TicketForm.tsx","features/users/WebsiteItem.tsx","features/users/Profile.tsx","app/common/modals/ModalContainer.tsx","features/pages/FAQ.tsx","features/pages/Contact.tsx","features/users/clientManager/ClientItem.tsx","features/users/clientManager/ClientManager.tsx","features/errors/NotFound.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","defaults","baseURL","process","responseBody","response","data","interceptors","request","use","config","token","store","commonStore","headers","Authorization","error","status","errors","modalStateErrors","key","push","flat","toast","requests","url","get","then","body","post","put","delete","agent","Tickets","list","details","id","update","ticket","create","Account","current","currentRole","getTransactions","username","login","user","register","allClients","deleteUser","Contact","send","email","UserStore","clientManager","Map","transactionHistory","creds","a","setToken","role","runInAction","history","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","console","log","getClients","clients","setClients","forEach","client","set","setTransactions","makeAutoObservable","this","ticketStore","tickets","ticketRegistry","setTickets","date","split","loadTickets","createTicket","deleteTicket","userStore","getItem","appLoaded","setServerError","setAppLoaded","reaction","setItem","modal","open","openModal","content","contactStore","sendContactEmail","commentStore","ticketComments","hubConnection","createHubConnection","ticketId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","commentsDto","comments","comment","createAt","Date","commentDto","stopHubConnection","stop","clearComments","clear","addComment","values","invoke","StoreContext","createContext","useStore","useContext","observer","useEffect","Segment","clearing","Comment","Group","onSubmit","resetForm","initialValues","validationSchema","Yup","required","isValid","handleSubmit","className","name","props","style","position","placeholder","rows","field","onKeyPress","e","shiftKey","preventDefault","Content","Author","Metadata","formatDistanceToNow","Text","whiteSpace","Actions","Action","getComments","Item","Header","subject","Meta","site","Description","Divider","horizontal","description","Button","positive","negative","onClick","color","floated","useState","setTicket","handleChange","event","target","value","Grid","GridColumn","width","ticket_items","returnTickets","as","Form","newTicket","uuid","autoComplete","Input","onChange","type","MyTextInput","useField","meta","Field","touched","label","Label","basic","password","setErrors","isSubmitting","Image","src","size","render","marginBottom","fluid","Menu","borderless","fixed","NavLink","to","exact","isLoggedIn","displayProfile","includes","displaySuperAdmin","Link","colors","createSlide","backgroundColor","backgroundSize","backgroundRepeat","backgroundPosition","ACTIONS","reducer","slides","action","ind","length","splice","m","Portfolio","index","setIndex","useReducer","i","portSlides","dispatch","direction","setDirection","transitionEnabled","setTransitionEnabled","timeoutRef","useRef","resetTimeout","clearTimeout","resetTransition","setTimeout","prevDir","transform","transition","onTransitionEnd","prevIndex","prevDirection","ReactDOM","document","getElementById","MyTextArea","QuoteForm","fromEmail","images","SlideShow","React","map","image","backgroundImage","_","idx","HomePage","Column","rounded","raised","height","Footer","TransactionItem","transaction","Table","Row","Cell","amount","service","transactiontype","createTime","dueTime","total","setTotal","HeaderCell","Body","transactionItems","total_amount","prevTotal","ProgressFeed","panes","menuItem","Tab","Pane","attached","menu","secondary","pointing","TicketForm","curDate","toISOString","ticketSubmit","WebsiteItem","website","Progress","percent","progress","websites","displayWebsites","Modal","onClose","FAQ","activeIndex","setActiveIndex","handleClick","titleIndex","Accordion","styled","Title","Icon","active","ClientItem","client_items","returnClients","NotFound","icon","Inline","primary","finally","hideProgressBar","path","component","TicketDashboard","ClientManager","Profile","LoginForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","Provider"],"mappings":"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","file":"static/js/main.e4f9ae1c.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport Email from \"../models/email\";\r\nimport { Ticket } from \"../models/ticket\";\r\nimport { Transaction } from \"../models/transaction\";\r\nimport { User, UserFormValues, UserSimple } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\naxios.interceptors.request.use((config) => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n\r\n    return config;\r\n}, (error:AxiosError) => {\r\n    const{data, status} = error.response!;\r\n\r\n    switch(status){\r\n        case 400:\r\n            if(data.errors){\r\n                const modalStateErrors = [];\r\n                for(const key in data.errors){\r\n                    if(data.errors[key]){\r\n                        modalStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            else{\r\n                toast.error(data)\r\n            }\r\n            break;\r\n    }\r\n})\r\n\r\n\r\nconst requests ={\r\n    get:<T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post:<T> (url: string, body:{}) => axios.post<T>(url,body).then(responseBody),\r\n    put:<T> (url: string,body:{}) => axios.put<T>(url,body).then(responseBody),\r\n    del:<T> (url: string) => axios.delete<T>(url).then(responseBody)\r\n}\r\n\r\nconst Tickets ={\r\n    list: () => requests.get<Ticket[]>('/tickets'),\r\n    details: (id:string) => requests.get<Ticket>(`/tickets/${id}`),\r\n    update: (ticket: Ticket) => requests.put<void>(`/tickets/${ticket.id}`, ticket),\r\n    create: (ticket: Ticket) => requests.post<void>('/tickets', ticket),\r\n    delete: (id:string) => requests.del<void>(`/tickets/${id}`)\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    currentRole: () => requests.get<string[]>('/account/role'),\r\n    getTransactions: (username:string) => requests.get<Transaction[]>(`/transaction/${username}`),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login',user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register',user),\r\n    allClients: () => requests.get<UserSimple[]>('/account/allusers'),\r\n    deleteUser: (id:string) => requests.del<void>(`/account/${id}`)\r\n}\r\n\r\nconst Contact = {\r\n    send: (email: Email) => requests.post('/contact', email)\r\n}\r\n\r\nconst agent = {\r\n    Tickets,\r\n    Account,\r\n    Contact\r\n}\r\n\r\nexport default agent;","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues, UserSimple } from \"../models/user\";\r\nimport { store } from \"./store\";\r\nimport {history} from \"../..\"\r\nimport { Transaction } from \"../models/transaction\";\r\n\r\nexport default class UserStore{\r\n    user: User | null = null;\r\n    clientManager = new Map<string, UserSimple>();\r\n    transactionHistory:Transaction[] = [];\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try{\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            user.role = await agent.Account.currentRole();\r\n\r\n            runInAction(() => {\r\n                this.user = user;\r\n            })\r\n            history.push('/profile');\r\n            store.modalStore.closeModal();\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try{\r\n            const user = await agent.Account.current();\r\n            user.role = await agent.Account.currentRole();\r\n            runInAction(() => this.user = user);\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getClients = async () => {\r\n        try{\r\n            var clients = await agent.Account.allClients();\r\n            this.setClients(clients);\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    setClients = async (clients:UserSimple[]) => {\r\n        clients.forEach(client =>{\r\n            this.clientManager.set(client.id, client);\r\n        });\r\n    }\r\n\r\n    setTransactions = async () => {\r\n        try{\r\n            if(this.user){\r\n                const transactionHistory = await agent.Account.getTransactions(this.user.username);\r\n                runInAction(() => this.transactionHistory = transactionHistory);\r\n            }\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    deleteUser = async (id:string) => {\r\n        try{\r\n            await agent.Account.deleteUser(id);\r\n            console.log(\"user deleted!\");\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ContactStore from \"./contactStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport TicketStore from \"./ticketStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store{\r\n    ticketStore: TicketStore;\r\n    userStore: UserStore;\r\n    commonStore: CommonStore;\r\n    modalStore: ModalStore;\r\n    contactStore: ContactStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\n\r\nexport const store: Store = {\r\n    ticketStore: new TicketStore(),\r\n    userStore: new UserStore(),\r\n    commonStore: new CommonStore(),\r\n    modalStore: new ModalStore(),\r\n    contactStore: new ContactStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable} from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Ticket } from \"../models/ticket\";\r\n\r\nexport default class TicketStore{\r\n    tickets: Ticket[] = [];\r\n    ticketRegistry = new Map<string, Ticket>();\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    private setTickets = (tickets:Ticket[]) => {\r\n        //var new_tickets = [];\r\n        tickets.forEach((ticket)=>{\r\n            ticket.date = ticket.date.split('T')[0];\r\n            this.ticketRegistry.set(ticket.id,ticket);\r\n            //new_tickets.push(ticket);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    loadTickets = async () =>{\r\n        try{\r\n           this.setTickets(await agent.Tickets.list());\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    createTicket = async (ticket:Ticket) =>{\r\n        try{\r\n            await agent.Tickets.create(ticket);\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    deleteTicket = async (id:string) =>{\r\n        try{\r\n            await agent.Tickets.delete(id);\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\n\r\nexport default class CommonStore{\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n    \r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if(token) {\r\n                    window.localStorage.setItem('jwt', token);\r\n                }\r\n                else{\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string|null) =>{\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal{\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore{\r\n    modal : Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport Email from \"../models/email\";\r\n\r\n\r\n\r\nexport default class ContactStore{\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n\r\n    sendContactEmail = (email:Email) => {\r\n        agent.Contact.send(email);\r\n        console.log('email sent!');\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { CommentDto, CommentsDto, TicketComment } from \"../models/ticketcomment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore{\r\n    ticketComments = new Map<string,TicketComment[]>();\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (ticketId: string) => {\r\n        this.hubConnection = new HubConnectionBuilder()\r\n            .withUrl(process.env.REACT_APP_CHAT_URL + '?ticketId='+ ticketId, {\r\n                accessTokenFactory: () => store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n        \r\n        this.hubConnection.start()\r\n        .catch(error => console.log('Error establishing connection: ', error));\r\n        \r\n        //Recieves Object {ticketId, comments:TicketComment[]}\r\n        this.hubConnection.on('LoadComments', (commentsDto:CommentsDto) => {\r\n            runInAction(() => {\r\n                commentsDto.comments.forEach(comment => {\r\n                    comment.createAt = new Date(comment.createAt + 'Z');\r\n                })\r\n                this.ticketComments.set(commentsDto.ticketId, commentsDto.comments);\r\n            });\r\n        });\r\n\r\n        this.hubConnection.on('ReceiveComment', (commentDto: CommentDto) => {\r\n            runInAction(() => {\r\n                var comment = commentDto.comment;\r\n                comment.createAt = new Date(comment.createAt);\r\n                var comments = this.ticketComments.get(commentDto.ticketId);\r\n                comments.push(comment);\r\n                console.log(\"Comment Store:\", comment);\r\n                this.ticketComments.set(commentDto.ticketId, comments);\r\n            });\r\n        })\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.ticketComments.clear();\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        try{\r\n            await this.hubConnection?.invoke('SendComment',values);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { Field, FieldProps, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect} from \"react\";\r\nimport { Segment, Comment} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport {formatDistanceToNow} from 'date-fns';\r\n\r\ninterface Props{\r\n    ticketId: string;\r\n}\r\n\r\nexport default observer(function TicketComments({ticketId}:Props)\r\n{\r\n    const {commentStore} = useStore();\r\n\r\n    useEffect(() =>{\r\n        if(ticketId){\r\n            commentStore.createHubConnection(ticketId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, ticketId]);\r\n\r\n    let getComments = () => {\r\n        var ticketComments = commentStore.ticketComments.get(ticketId);\r\n        var comments = [];\r\n\r\n        if (!ticketComments) return comments; \r\n\r\n        for(var comment of ticketComments){\r\n\r\n            comments.push(\r\n                    <Comment key={comment.id}>\r\n                        <Comment.Content>\r\n                            <Comment.Author>{comment.username}</Comment.Author>\r\n                            <Comment.Metadata>\r\n                                <div>{formatDistanceToNow(comment.createAt)} ago</div>\r\n                            </Comment.Metadata>\r\n                            <Comment.Text style={{whiteSpace:\"pre-wrap\"}}>{comment.body}</Comment.Text>\r\n                            <Comment.Actions>\r\n                                <Comment.Action>Reply</Comment.Action>\r\n                            </Comment.Actions>\r\n                        </Comment.Content>\r\n                    </Comment>\r\n                );\r\n        }\r\n        return comments;\r\n    }\r\n    return(\r\n        <Segment clearing>\r\n            <Comment.Group>\r\n                <Formik\r\n                    onSubmit={(values, {resetForm}) => \r\n                        commentStore.addComment(values).then(() => resetForm())}\r\n                    initialValues={{ticketId: ticketId, body:''}}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}    \r\n                >\r\n                    {({isValid, handleSubmit}) => (\r\n                        <Form className='ui form'>\r\n                            <Field name='body'>\r\n                                {(props: FieldProps) =>(\r\n                                    <div style={{position:'relative'}}>\r\n                                        <textarea\r\n                                            placeholder=\"Add comment (Enter to submit; SHIFT+Enter for new line)\"\r\n                                            rows={2}\r\n                                            {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if(e.key === 'Enter' && e.shiftKey){\r\n                                                    return;\r\n                                                }\r\n                                                if(e.key === 'Enter' && !e.shiftKey){\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                    )}\r\n                    \r\n                </Formik>\r\n                {getComments()}\r\n            </Comment.Group>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Divider, Item, Segment } from \"semantic-ui-react\";\r\nimport { Ticket } from \"../../../app/models/ticket\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport TicketComments from \"./TicketComments\";\r\n\r\n\r\ninterface Props{\r\n    ticket: Ticket;\r\n    //username: string;\r\n}\r\n\r\nexport default observer(function TicketItem({ticket}: Props)\r\n{\r\n    const{ticketStore} = useStore();\r\n    const{deleteTicket, ticketRegistry} = ticketStore;\r\n\r\n    function handleTicketDelete(e:SyntheticEvent<HTMLButtonElement>, id:string){\r\n        deleteTicket(id);\r\n        ticketRegistry.delete(id);\r\n    }\r\n    return(\r\n        <Segment.Group>\r\n            <Segment className=\"ticket-segment\">\r\n                <Item key={ticket.id}>\r\n                    <Item.Content className=\"ticket-item\" >\r\n                        <Item.Header className=\"ticket-header\">\r\n                            <span className=\"ticket-username\"><strong>User:</strong> {ticket.user[0].username}</span>\r\n                            <span className=\"ticket-subject\">\r\n                                <strong>Subject:</strong> {ticket.subject}<br/>\r\n                                <strong>Date:</strong>{ticket.date}\r\n                            </span>\r\n                        </Item.Header>\r\n                        <Item.Meta className='ticket-site'>\r\n                            <span><strong>Site: </strong>{ticket.site}</span>\r\n                        </Item.Meta>\r\n                        <Item.Description className=\"ticket-description\">\r\n                            <Divider horizontal>Description</Divider>\r\n                            <div className='ticket-text'>\r\n                                <p>{ticket.description}</p>\r\n                            </div>\r\n                        </Item.Description>\r\n                        <Button positive>Reply</Button>\r\n                        <Button negative onClick={(e)=>{handleTicketDelete(e,ticket.id)}}>Delete</Button>\r\n                        <Button color='blue' floated='right'>Archive</Button>\r\n                    </Item.Content>\r\n                    <TicketComments ticketId={ticket.id}/>\r\n                </Item>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import {Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { ChangeEvent, Fragment, useEffect, useState } from \"react\";\r\nimport { Grid, GridColumn, Segment,Form, Header} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport TicketItem from \"./TicketItem\";\r\nimport {v4 as uuid} from \"uuid\";\r\n\r\n\r\nexport default observer(function TicketDashboard()\r\n{\r\n    const {ticketStore} = useStore();\r\n    const {createTicket,ticketRegistry} = ticketStore;\r\n\r\n    const [ticket, setTicket] = useState({\r\n        id: '',\r\n        date: '',\r\n        username: '',\r\n        site: '',\r\n        subject: '',\r\n        description: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        ticketStore.loadTickets();\r\n    },[ticketStore])\r\n\r\n\r\n    function handleSubmit(){\r\n        const newTicket ={\r\n            ...ticket,\r\n            id:uuid(),\r\n    };\r\n\r\n        //console.log(newTicket);\r\n        createTicket(newTicket);\r\n        ticketStore.loadTickets();\r\n    }\r\n\r\n    function handleChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>){\r\n        const {name,value} = event.target;\r\n        setTicket({...ticket,[name]:value});\r\n    }\r\n\r\n    function returnTickets(){\r\n        var ticket_items = [];\r\n        for(var ticket of ticketRegistry.values()){\r\n            ticket_items.push(<TicketItem key={ticket.id} ticket={ticket}/>);\r\n        }\r\n        return ticket_items;\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <title>MWS | Dashboard</title>\r\n            <div className='ticket-dashboard'>\r\n                <Grid>\r\n                    <GridColumn width='10'>\r\n                        {returnTickets()} \r\n                    </GridColumn>\r\n                    <GridColumn width='6'>\r\n                        <Segment>\r\n                            <Header as='h1' style={{color:'black'}}>Create Ticket</Header>\r\n                            <Formik initialValues = {{email: ''}} onSubmit={values => console.log(values)}>\r\n                                <Form onSubmit={handleSubmit} autoComplete='off'>\r\n                                    <Form.Input placeholder='User' name='username' onChange={handleChange}/>\r\n                                    <Form.Input type='date' placeholder='User' name='date' onChange={handleChange}/>\r\n                                    <Form.Input placeholder='Subject' name='subject' onChange={handleChange}/>\r\n                                    <Form.Input placeholder='Site' name='site' onChange={handleChange}/>\r\n                                    <Form.Input placeholder='Description' name='description' onChange={handleChange}/>\r\n                                    <Form.Button positive type='submit'>Submit</Form.Button>\r\n                                </Form>\r\n                            </Formik>\r\n                        </Segment>\r\n                    </GridColumn>\r\n                </Grid>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n})","import {useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props){\r\n    const [field, meta]= useField(props.name);\r\n\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Label, Image } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\n\r\nexport default observer(function LoginForm(){\r\n    const {userStore} = useStore();\r\n    return(\r\n            <Formik\r\n                initialValues={{email:'', password:'', error:null}}\r\n                onSubmit={(values, {setErrors}) =>userStore.login(values).catch(error => \r\n                    setErrors({error: 'Invalid email or password'}))}\r\n            >\r\n                {({handleSubmit, isSubmitting, errors}) => (\r\n                    <Form className='ui form login-form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <Image className='login-img' src={'/assets/mws-logo-512.png'}  size={\"tiny\"}></Image>\r\n                        <MyTextInput name='email' placeholder='Email'/>\r\n                        <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                        <ErrorMessage\r\n                            name='error' render={() => \r\n                            <Label style={{marginBottom:'10px'}} basic color='red' content={errors.error}></Label>}\r\n                        />\r\n                        <Button positive content='Login' type='submit' fluid/>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Image, Menu } from \"semantic-ui-react\";\r\nimport LoginForm from \"../../features/users/LoginForm\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\n\r\n\r\nexport default observer(function NavBar()\r\n{\r\n    const {userStore, modalStore} = useStore();\r\n\r\n    function displayProfile(){\r\n        if(userStore.isLoggedIn){\r\n            return(<Menu.Item as={NavLink} to='/profile'>Profile</Menu.Item>);\r\n        }\r\n    }\r\n    function displaySuperAdmin(){\r\n        if(userStore.isLoggedIn){\r\n            let roles = userStore.user.role;\r\n            if(roles.includes(\"SuperAdmin\")){\r\n                return(<>\r\n                    <Menu.Item as={NavLink} to='/tickets'>Ticket Dashboard</Menu.Item>\r\n                    <Menu.Item as={NavLink} to='/clientManager'>Client Manager</Menu.Item>\r\n                </>);\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='navbar-wrapper'>\r\n        <Menu borderless fixed='top'>\r\n            <Menu.Item as={NavLink} to='/' exact>\r\n                <Image src={'/assets/mws-logo-512.png'} size={\"tiny\"}></Image>\r\n            </Menu.Item>\r\n            {/*<Menu.Item as={NavLink} to='/faq'>F.A.Q</Menu.Item>*/}\r\n            <Menu.Item as={NavLink} to='/contact'>Contact</Menu.Item>\r\n            <Menu.Item>Portfolio</Menu.Item>\r\n            {displayProfile()}\r\n            {displaySuperAdmin()}\r\n            {!userStore.isLoggedIn ? (\r\n            <Menu.Item position='right'>\r\n                <Button className='login-btn' onClick={() => modalStore.openModal(<LoginForm/>)} positive>Client Login</Button>\r\n            </Menu.Item>) : (\r\n             <Menu.Item position='right'>\r\n                 Welcome {userStore.user.username}!\r\n                <Button className='login-btn' onClick={() => userStore.logout()} as={Link} to='' negative>Logout</Button>\r\n             </Menu.Item>)\r\n            }\r\n           \r\n        </Menu>\r\n        </div>\r\n    )\r\n})","import React, { useEffect, useRef, useState, useReducer} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\n\r\nconst colors=[\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\r\nconst delay = 5000;\r\n\r\n\r\nfunction mod(n, m) {\r\n    return ((n % m) + m) % m;\r\n  }\r\n\r\nfunction createSlide(color){\r\n    return(\r\n        <div\r\n            className=\"port-slide\"\r\n            //key={index}\r\n            style={{backgroundColor:`${color}`,\r\n            backgroundSize:'contain',\r\n            backgroundRepeat:'no-repeat',\r\n            backgroundPosition:'50% 50%'\r\n            }}\r\n        ></div>\r\n    )\r\n\r\n}\r\n\r\nfunction portSlides(){\r\n    var slides =[];\r\n    for(var i=0; i<colors.length;i++){\r\n        slides.push(createSlide(colors[i]))\r\n    }\r\n    slides =[createSlide(colors[colors.length-1]),...slides,createSlide(colors[0])]\r\n    return(slides)\r\n}\r\n\r\nconst ACTIONS={\r\n    ADDSLIDELAST:'addslide-last',\r\n    DELSLIDESTART:'delslide-start',\r\n    ADDSLIDESTART: 'addslide-start',\r\n    DELSLIDELAST:'delslide-last'\r\n\r\n}\r\n\r\nfunction reducer(slides:any[], action){\r\n    switch(action.type){\r\n        case ACTIONS.ADDSLIDELAST:\r\n            action.ind = (action.ind + 4) % colors.length;\r\n            slides.push(createSlide(colors[action.ind]))\r\n            return(slides)\r\n        case ACTIONS.DELSLIDESTART:\r\n            slides.splice(0,1);\r\n            return(slides)\r\n        case ACTIONS.ADDSLIDESTART:\r\n            action.ind = mod(action.ind - 2, colors.length);\r\n            slides = [createSlide(colors[action.ind]),...slides];\r\n            return(slides);\r\n        case ACTIONS.DELSLIDELAST:\r\n            slides.splice(slides.length - 1,1);\r\n            return(slides)\r\n    }\r\n\r\n}\r\n\r\nfunction Portfolio(){\r\n    const [index, setIndex] = useState(0);\r\n    const [slides, dispatch] = useReducer(reducer,portSlides());\r\n    const [direction, setDirection] = useState(0);//1 = right,0 = return to neutral -1 = left\r\n    const [transitionEnabled, setTransitionEnabled] = useState(true);\r\n    const timeoutRef = useRef(null);\r\n\r\n    function resetTimeout() {\r\n\r\n        if (timeoutRef.current) {\r\n          clearTimeout(timeoutRef.current!);\r\n        }\r\n      }\r\n    \r\n    function handleTransitionEnd(){\r\n        if(direction === -1){//move to the right\r\n            dispatch({type:ACTIONS.ADDSLIDELAST, ind:index});\r\n            dispatch({type:ACTIONS.DELSLIDESTART});\r\n            setIndex((prevIndex) => prevIndex+1 > colors.length - 1 ? 0 : prevIndex + 1);\r\n        }\r\n        else{//move to the left\r\n            dispatch({type:ACTIONS.ADDSLIDESTART, ind:index});\r\n            dispatch({type:ACTIONS.DELSLIDELAST});\r\n            setIndex((prevIndex) => prevIndex-1 < 0 ? colors.length - 1 : prevIndex - 1);  \r\n        }\r\n        setDirection((prevDir)=> \r\n        prevDir = 0);\r\n        setTransitionEnabled(false);\r\n    }\r\n\r\n    function resetTransition(){\r\n        setTransitionEnabled(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        resetTimeout();\r\n\r\n        timeoutRef.current = setTimeout(() => \r\n            [resetTransition(),\r\n            setDirection((prevDir)=>\r\n            prevDir === 0 ? -1 : 0)],\r\n            delay\r\n        );\r\n                \r\n        \r\n        return () => {\r\n            resetTimeout();\r\n          };\r\n    },[direction]);\r\n\r\n    function left(){\r\n        setDirection((prevDirection) => prevDirection === -1 ? 0 : 1);\r\n        resetTransition();\r\n    }\r\n\r\n    function right(){\r\n        setDirection((prevDirection) => prevDirection === 1 ? 0 : -1);\r\n        resetTransition();\r\n    }\r\n\r\n    return(\r\n        <div className='portfolio segment-div-white' style={{backgroundColor:'white'}}>\r\n            <Header as='h1' style={{color:'black'}}>Portfolio(Coming Soon...)</Header>\r\n            <div className='port-slideshow'>\r\n                <div\r\n                    className=\"port-slideshowSlider\"\r\n                    style={{ transform: `translateX(${((direction*20)-20)}%)`,\r\n                    transition: !transitionEnabled ? 'none' : 'ease 2000ms'}}\r\n\r\n                    onTransitionEnd = {()=> handleTransitionEnd()}\r\n                >\r\n                    {slides}\r\n                </div>\r\n                <Button className=\"left-btn\" onClick={left} positive>Left</Button>\r\n                <Button className=\"right-btn\" onClick={right}positive>Right</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<Portfolio/>, document.getElementById(\"root\"));\r\n\r\nexport default Portfolio;","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    type?:string;\r\n    label?:string;\r\n}\r\n\r\nexport default function MyTextArea(props:Props){\r\n    const[field] = useField(props.name);\r\n    return(\r\n        <Form.Field>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props}/>\r\n        </Form.Field>\r\n    )\r\n\r\n}","import {Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport {Button, Header, Input} from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\n\r\nexport default function QuoteForm(){\r\n    const {contactStore} = useStore();\r\n\r\n    return(\r\n        <Formik initialValues={{email:\"\", description:\"\", error:null}}\r\n            onSubmit={(values) => contactStore.sendContactEmail({fromEmail:values.email, body:values.description})}>\r\n            <Form className=\"ui form quoteForm\">\r\n                <Header className=\"black-header\">Contact Luke!</Header>\r\n\r\n                <MyTextInput name='email' placeholder='Email'/>\r\n                <MyTextArea name=\"description\" placeholder=\"Description...\"/>\r\n                <Button positive content=\"Send\" type=\"submit\"/>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport website_img from \"../assets/website.jpg\";\r\nimport client_img from \"../assets/client.jpg\";\r\nimport QuoteForm from \"./QuoteForm\";\r\n\r\n//const website_img1 = website_img;\r\nconst images = [website_img, client_img];\r\nconst delay = 5000;\r\n\r\nfunction SlideShow() {\r\n  const [index, setIndex] = React.useState(0);\r\n  const timeoutRef = React.useRef(null);\r\n\r\n  function resetTimeout() {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current!);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    resetTimeout();\r\n    timeoutRef.current = setTimeout(\r\n      () =>\r\n        setIndex((prevIndex) =>\r\n          prevIndex === images.length - 1 ? 0 : prevIndex + 1\r\n        ),\r\n      delay\r\n    );\r\n\r\n    return () => {\r\n      resetTimeout();\r\n    };\r\n  }, [index]);\r\n\r\n  return (\r\n    <div className=\"slideshow\">\r\n      <div\r\n        className=\"slideshowSlider\"\r\n        style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\r\n      >\r\n        {images.map((image, index) => (\r\n          <div\r\n            className=\"slide\"\r\n            key={index}\r\n            style={{backgroundImage:`url(${image})`,\r\n            backgroundSize:'cover',\r\n            backgroundRepeat:'no-repeat',\r\n            backgroundPosition:'50% 50%'\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <div className='quoteform-div'>\r\n        <QuoteForm/>\r\n      </div>\r\n\r\n      <div className=\"slideshowDots\">\r\n        {images.map((_, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\r\n            onClick={() => {\r\n              setIndex(idx);\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(<SlideShow/>, document.getElementById(\"root\"));\r\n\r\nexport default SlideShow;","export default __webpack_public_path__ + \"static/media/website.befe7c7c.jpg\";","export default __webpack_public_path__ + \"static/media/client.e89c0666.jpg\";","import React, { Fragment } from \"react\";\r\nimport { Header, Segment, Image,Grid } from \"semantic-ui-react\";\r\nimport Portfolio from \"./Portfolio\";\r\nimport SlideShow from \"./SlideShow\";\r\n\r\n\r\nexport default function HomePage(){\r\n    return(\r\n        <Fragment>\r\n            <title>MWS | Home</title>\r\n            <SlideShow/>\r\n            <div className=\"segment-div\">\r\n                <Header as=\"h1\">Meet Luke!</Header>\r\n                <Grid>\r\n                    <Grid.Column width=\"6\">\r\n                        <Image src='../assets/luke-web-pic.jpg' size=\"large\" rounded></Image>\r\n                    </Grid.Column>\r\n                    <Grid.Column width='10'>\r\n                        <div className=\"about\">\r\n                            <Segment className=\"about-section\" raised style={{height:'100%'}}>\r\n                                <Header as=\"h1\" style={{color:\"black\"}}>What I Do</Header>\r\n                                <p>I create fast and interactive Single Page Web Applications!</p>\r\n                            </Segment>\r\n                            <Segment className=\"about-section\" raised style={{height:'100%'}}>\r\n                                <Header as=\"h1\" style={{color:\"black\"}}>My Goal</Header>\r\n                                <p>Add value to your idea or business with a personalized web application that is intuitive for your users to use.</p>\r\n                            </Segment>\r\n                            <Segment className=\"about-section\" raised style={{height:'100%'}}>\r\n                                <Header as=\"h1\" style={{color:\"black\"}}>My Tools</Header>\r\n                                <p>React, ASP.NET, and Node.JS</p>\r\n                            </Segment>\r\n                        </div>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n            <Portfolio/>\r\n        </Fragment>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {Image} from \"semantic-ui-react\";\r\n\r\nexport default function Footer(){\r\n    return(\r\n        <footer>\r\n            <Image src={'/assets/mws-logo-512.png'} size='mini'/>\r\n            <p>Copyright 2021 MWS, All Rights Reserved</p>\r\n        </footer>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport { Transaction } from \"../../app/models/transaction\";\r\n\r\ninterface Props{\r\n    transaction: Transaction;\r\n}\r\n\r\nexport default function TransactionItem({transaction}:Props){\r\n\r\n    return(\r\n        <Table.Row key={transaction.id}>\r\n            <Table.Cell>{transaction.amount}</Table.Cell>\r\n            <Table.Cell>{transaction.service}</Table.Cell>\r\n            <Table.Cell>{transaction.description}</Table.Cell>\r\n            <Table.Cell>{transaction.transactiontype}</Table.Cell>\r\n            <Table.Cell>{transaction.createTime}</Table.Cell>\r\n            <Table.Cell>{transaction.dueTime}</Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Header, Table } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport TransactionItem from \"./TransactionItem\";\r\n\r\n\r\nexport default observer(function TransactionHistory()\r\n{\r\n    const {userStore} = useStore();\r\n    const {transactionHistory,user} = userStore;\r\n    const [total, setTotal] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        if(user == null){\r\n            userStore.getUser();\r\n        }\r\n        userStore.setTransactions();\r\n    },[user,total, userStore])\r\n\r\n    let transactionItems = () => {\r\n        let transactionItems = [];\r\n        let total_amount = 0;\r\n\r\n        if(transactionHistory.length === 0)\r\n        {\r\n            transactionItems.push((<Table.Row key='no-transactions'></Table.Row>));\r\n            return transactionItems;\r\n        }\r\n\r\n        transactionHistory.forEach((transaction) => {\r\n            total_amount += transaction.amount;\r\n            transactionItems.push((<TransactionItem transaction={transaction}/>));\r\n        })\r\n        if(total === 0){\r\n            setTotal(prevTotal => prevTotal + total_amount);\r\n        }\r\n        \r\n        return transactionItems;\r\n    }\r\n    return(\r\n        <>\r\n        <Header as='h1' style={{color:'black'}}>{\"$\" + total}</Header>\r\n        <Table>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\r\n                    <Table.HeaderCell>Service</Table.HeaderCell>\r\n                    <Table.HeaderCell>Description</Table.HeaderCell>\r\n                    <Table.HeaderCell>Type</Table.HeaderCell>\r\n                    <Table.HeaderCell>Sent Date</Table.HeaderCell>\r\n                    <Table.HeaderCell>Due By</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {transactionItems()}\r\n            </Table.Body>\r\n        </Table>\r\n        </>\r\n    )\r\n})","import React from \"react\";\r\nimport { Header, Segment, Tab } from \"semantic-ui-react\";\r\n\r\n\r\nexport default function ProgressFeed()\r\n{\r\n\r\n    const panes = [\r\n        {\r\n          menuItem: 'My Tickets',\r\n          render: () => <Tab.Pane attached={false}>My Tickets</Tab.Pane>,\r\n        },\r\n        {\r\n          menuItem: 'Progress Notes',\r\n          render: () => <Tab.Pane attached={false}>Progress Notes</Tab.Pane>,\r\n        },\r\n      ]\r\n      \r\n      const feedTabs = () => (\r\n        <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\r\n      )\r\n    return(\r\n        <Segment>\r\n            <Header as='h1' className=\"black-header\">Progress Feed</Header>\r\n            {feedTabs()}\r\n        </Segment>\r\n    )\r\n\r\n}","import { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\n\r\n\r\ninterface Props{\r\n    url: string;\r\n}\r\n\r\nexport default function TicketForm({url}:Props){\r\n    const {ticketStore} = useStore();\r\n    const {createTicket} = ticketStore;\r\n    \r\n    function ticketSubmit(ticket){\r\n        const newTicket ={\r\n            ...ticket,\r\n            id:uuid(),\r\n    };\r\n        console.log(newTicket);\r\n        createTicket(newTicket);\r\n    }\r\n    let curDate = new Date();\r\n    return(\r\n        <Formik \r\n            initialValues = {{\r\n                id: '',\r\n                date: curDate.toISOString(),\r\n                username: '',\r\n                site: url,\r\n                subject: '',\r\n                description: ''\r\n            }} \r\n            onSubmit={values => ticketSubmit(values)}>\r\n            {({handleSubmit}) => (\r\n            <Form className=\"ui form\" onSubmit={handleSubmit}  autoComplete='off'>\r\n                <Header as='h1' style={{color:'black'}}>Create Ticket</Header>\r\n                <MyTextInput placeholder='Subject' name='subject'/>\r\n                <MyTextInput placeholder='Description' name='description'/>\r\n                <Button positive type='submit'>Submit</Button>\r\n            </Form>)}\r\n        </Formik>\r\n    )\r\n}","import React from \"react\";\r\nimport { Button, Header, Progress, Segment } from \"semantic-ui-react\";\r\nimport { Website } from \"../../app/models/website\";\r\nimport modalStore from \"../../app/stores/modalStore\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport TicketForm from \"../tickets/TicketForm\";\r\n\r\n\r\ninterface Props{\r\n    website: Website\r\n}\r\n\r\nexport default function WebsiteItem({website}:Props){\r\n    const {modalStore} = useStore();\r\n\r\n    return(\r\n        <Segment>\r\n            <Header as=\"h3\" style={{color:\"black\"}}>{website.url}</Header>\r\n            <Progress percent={website.progress} progress color=\"green\"/>\r\n            <Button positive>View Progress</Button>\r\n            <Button color='blue' onClick={() => modalStore.openModal(<TicketForm url={website.url}/>)} floated='right'>Create Ticket</Button>\r\n\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Button, Grid, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport TransactionHistory from \"../payments/TransactionHistory\";\r\nimport ProgressFeed from \"./ProgressFeed\";\r\nimport WebsiteItem from \"./WebsiteItem\";\r\n\r\n\r\n\r\nexport default observer(function Profile(){\r\n    const {userStore} = useStore();\r\n    const {user} = userStore;\r\n\r\n    useEffect(() => {\r\n        if(user == null){\r\n            userStore.getUser();\r\n        }\r\n    },[user, userStore]);\r\n\r\n    function displayWebsites(){\r\n        var websites:JSX.Element[] = [];\r\n        if(user=== null || user.websites === null || user.websites.length === 0){   \r\n            websites.push(<Segment placeholder>\r\n                <Header className=\"black-header\">No Websites Found</Header>;\r\n            </Segment>);\r\n            return websites;\r\n        }\r\n        user.websites.forEach(site => websites.push(<WebsiteItem key={site.id} website={site}></WebsiteItem>));\r\n\r\n        return websites;\r\n    }\r\n    return(\r\n        <Segment className='content-container'>\r\n            <title>MWS | My Profile</title>\r\n            <Header className=\"profile-header\" as='h1' style={{color:'black'}}>My Profile</Header>\r\n            <ProgressFeed/>\r\n            <Grid>\r\n                <Grid.Column width='8'>\r\n                    <Segment raised>\r\n                        <Header as='h1' style={{color:'black'}}>Current Balance</Header>\r\n                        <TransactionHistory/>\r\n                        <Button positive>Pay Balance</Button>\r\n                        <Button floated='right' color='blue'>View History</Button>\r\n                    </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column width='8'>\r\n                    <Segment raised>\r\n                        <Header as='h1' style={{color:'black'}}>My Websites</Header>\r\n                        <Segment.Group>\r\n                            {displayWebsites()}\r\n                        </Segment.Group>\r\n                    </Segment>\r\n\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n        </Segment>\r\n        \r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\n\r\nexport default observer(function ModalContainer(){\r\n    const {modalStore} = useStore();\r\n    return(\r\n        <Modal open = {modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import React, { useState } from \"react\";\r\nimport { Accordion,Header,Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function FAQ(){\r\n    const [activeIndex, setActiveIndex] = useState(-1);\r\n    \r\n    const handleClick = (e,titleIndex) =>{\r\n        const {index} = titleIndex;\r\n        const newIndex = activeIndex === index ? -1 : index;\r\n        setActiveIndex(newIndex);\r\n    }\r\n\r\n    return(\r\n        <Segment className='ui segment content-container'>\r\n            <title>MWS | FAQ</title>\r\n            <Header as='h1' className='black-header'>F.A.Q</Header>\r\n            <Accordion styled className='faq-accordion'>\r\n                <Accordion.Title index={0} onClick={handleClick}>\r\n                    <Icon name=\"dropdown\"/>\r\n                    FAQ #1\r\n                </Accordion.Title>\r\n                <Accordion.Content active={activeIndex === 0}>\r\n                    <p>Answer #1</p>\r\n                </Accordion.Content>\r\n                <Accordion.Title index={1} onClick={handleClick}>\r\n                    <Icon name=\"dropdown\"/>\r\n                    FAQ #2\r\n                </Accordion.Title>\r\n                <Accordion.Content active={activeIndex === 1}>\r\n                    <p>Answer #2</p>\r\n                </Accordion.Content>\r\n            </Accordion>\r\n        </Segment>\r\n\r\n\r\n    )\r\n}","import { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Button, Header, Segment} from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default function Contact(){\r\n    const {contactStore} = useStore(); \r\n    return(\r\n            <Segment className='contact-form-container'>\r\n                <title>MWS | Contact</title>\r\n                <Segment className='contact-form-segment'>\r\n                    <Header as={'h1'} content='Contact Me!' className='black-header'/>\r\n                    <Formik initialValues={{email:\"\", description:\"\", error:null}}\r\n                        onSubmit={(values) => contactStore.sendContactEmail({fromEmail:values.email, body:values.description})}>\r\n                        \r\n                        <Form className=\"ui form contact-form\">\r\n                            <MyTextInput name='email' placeholder='Email'/>\r\n                            <MyTextArea name=\"description\" placeholder=\"Description...\"/>\r\n                            <Button positive content=\"Send\" type=\"submit\"/>\r\n                        </Form>\r\n\r\n                        \r\n                    </Formik>\r\n                </Segment>\r\n            </Segment>\r\n    )\r\n}","import React, { SyntheticEvent } from \"react\";\r\nimport { Button, Segment } from \"semantic-ui-react\";\r\nimport { UserSimple } from \"../../../app/models/user\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props{\r\n    client: UserSimple\r\n}\r\n\r\nexport default function ClientItem({client}:Props){\r\n    const {userStore} = useStore();\r\n    const {clientManager} = userStore;\r\n\r\n    function deleteUser(e:SyntheticEvent<HTMLButtonElement>, id:string){\r\n        userStore.deleteUser(id);\r\n        clientManager.delete(id);\r\n    }\r\n\r\n    return(\r\n        <Segment clearing className='clientManager'>\r\n            <p>\r\n                <strong>Username:</strong> {client.username}\r\n                <strong> Role:</strong> {client.role}\r\n            </p>\r\n            <Button onClick={(e) => deleteUser(e,client.id)} negative floated='right'>Remove User</Button>\r\n            <Button positive floated='right'>Create Website</Button>\r\n        </Segment>\r\n    )\r\n}","\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ClientItem from \"./ClientItem\";\r\n\r\n\r\nexport default observer(function ClientManager(){\r\n    const {userStore} = useStore();\r\n    const {clientManager} = userStore;\r\n\r\n    useEffect(() => {\r\n        userStore.getClients()\r\n    },[userStore,clientManager]);\r\n\r\n    function returnClients(){\r\n        var client_items = [];\r\n        for(var client of clientManager.values()){\r\n            if(!client.role.includes(\"SuperAdmin\")){\r\n                client_items.push(<ClientItem key={client.id} client={client}/>);\r\n            }\r\n\r\n        }\r\n        return client_items;\r\n    }\r\n\r\n    return(\r\n        <Segment>\r\n            <title>MWS | Client Dashboard</title>\r\n            {returnClients()}\r\n        </Segment>\r\n    )\r\n\r\n})","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\n\r\nexport default function NotFound(){\r\n    return(\r\n        <Segment placeholder>\r\n            <Header icon style={{color:\"black\"}}>\r\n                <Icon name='search'/>\r\n                Oops - we've looked everywhere and could not find this page.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to=\"/\" primary>\r\n                    Return to Home Page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import React, { Fragment, useEffect } from 'react';\nimport './App.css';\nimport TicketDashboard from '../../features/tickets/dashboard/TicketDashboard';\nimport NavBar from './NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport Footer from './Footer';\nimport Profile from '../../features/users/Profile';\nimport LoginForm from '../../features/users/LoginForm';\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport FAQ from '../../features/pages/FAQ';\nimport Contact from '../../features/pages/Contact';\nimport ClientManager from '../../features/users/clientManager/ClientManager';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\n\n\n\nfunction App() {\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() =>{\n    if (commonStore.token){\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    }\n    else{\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  return (\n    <Fragment>\n      <ModalContainer/>\n      <ToastContainer position='bottom-right' hideProgressBar/>\n        <NavBar/>\n        <div id='page-container'>\n          <div id='content-wrapper'>\n              <Switch>\n                <Route exact path='/' component={HomePage}></Route>\n                <Route path='/faq' component={FAQ}></Route>\n                <Route path='/tickets' component={TicketDashboard}></Route>\n                <Route path='/clientManager' component={ClientManager}></Route>\n                <Route path='/contact' component={Contact}></Route>\n                <Route path='/profile' component={Profile}></Route>\n                <Route path='/login' component={LoginForm}></Route>\n                <Route component={NotFound}></Route>\n              </Switch>\n            </div>\n            <div>\n            <Footer/>\n            </div>\n        </div>\n\n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport './index.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from \"history\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </StoreContext.Provider>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}